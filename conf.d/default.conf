" インクリメンタルサーチ
set incsearch

" 補完機能
set wildmenu wildmode=list:full

" 行番号
set number

" コマンドをステータスラインに表示
set showcmd

" スクロールの設定
set scrolloff=999

"全角スペースをハイライト表示
function! ZenkakuSpace()
  highlight ZenkakuSpace cterm=reverse ctermfg=DarkMagenta gui=reverse guifg=DarkMagenta
endfunction

if has('syntax')
    augroup ZenkakuSpace
        autocmd!
        autocmd ColorScheme       * call ZenkakuSpace()
        autocmd VimEnter,WinEnter * match ZenkakuSpace /　/
    augroup END
    call ZenkakuSpace()
endif




set laststatus=2
" ステータスバー表示
" set statusline=%<%f\ #%n%m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%y%=%l,%c%V%8P


" ディレクトリ閲覧時の表示をツリー形式に
let g:netrw_liststyle=3
" Charset, Line ending -----------------
set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,cp932,euc-jp,iso-2022-jp
set ffs=unix,dos,mac          " LF, CRLF, CR
if exists('&ambiwidth')
  set ambiwidth=double " UTF-8の□や○でカーソル位置がずれないようにする
endif

" When insert mode, change statusline.
" let g:hi_insert = 'hi StatusLine gui=None guifg=Black guibg=Yellow cterm=None ctermfg=Black ctermbg=Yellow'





" NeoBundle系

" originalrepos on github

NeoBundle 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc'
NeoBundle 'VimClojure'
NeoBundle 'Shougo/vimshell'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'ujihisa/unite-colorscheme'
NeoBundle 'Konfekt/FastFold'

if v:version > 703
    NeoBundle 'Shougo/neocomplete.vim'
endif


NeoBundle 'Shougo/neosnippet.vim'
NeoBundle "Shougo/neosnippet-snippets"
NeoBundle 'jpalardy/vim-slime'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'rhysd/committia.vim'

" latex関係
NeoBundle 'jcf/vim-latex'



" カラー設定
set t_Co=256







" C言語関係
NeoBundle 'Shougo/neocomplcache'

" カラースキーム関係
" molokai カラースキーム
NeoBundle 'tomasr/molokai'


" Lightline
NeoBundle 'itchyny/lightline.vim'
let g:lightline = {
  \ 'colorscheme': 'wombat'
\ }


NeoBundle 'Shougo/vimfiler.vim'



NeoBundle 'tyru/open-browser.vim'






"インデントの自動化"
set autoindent
"バックアップディレクトリ"

set backupdir=$HOME/.vimbackup
set undodir=$HOME/.vimundo
set browsedir=buffer
set directory=$HOME/.vimbackup
set expandtab
set hidden
set incsearch
set list
set scrolloff=999
set number
set shiftwidth=4
set showmatch
set smartindent
set smarttab
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%

"オートコマンド設定"

"入力モード時、ステータスラインのカラーを変更
" augroup InsertHook
" autocmd!
" autocmd InsertEnter * highlight StatusLine guifg=#ccdc90 guibg=#2E4340
" autocmd InsertLeave * highlight StatusLine guifg=#2E4340 guibg=#ccdc90
" augroup END

" Highlight Current Line
set cursorline

" Searchで大文字小文字の区別をしない 大文字があれば区別
" マッチテキストをハイライト
set ignorecase
set smartcase
set hlsearch

" jを2回でEscに
inoremap jj <Esc>

" ESCを二回押すことでハイライトを消す
nmap <silent> <Esc><Esc> :nohlsearch<CR>
"
" カーソル下の単語を * で検索
vnoremap <silent> * "vy/\V<C-r>=substitute(escape(@v, '\/'), "\n", '\\n','g')<CR><CR>


" neosnippetの設定
" Enable snipMate compatibility feature.
let g:neosnippet#enable_snipmate_compatibility = 1

" Tell Neosnippet about the other snippets
let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'

" neocompleteの設定
let g:neocomplete#enable_at_startup = 1

" vim-indent-guides を自動起動
let g:indent_guides_enable_on_vim_startup = 1

colorscheme default




let g:syntastic_mode_map = {
            \ 'mode': 'active',
            \ 'active_filetypes': ['php', 'coffeescript', 'sh', 'vim'],
            \ 'passive_filetypes': ['html', 'haskell', 'python']
            \}

command! SideFiler VimFiler -split -simple -winwidth=35 -no-quit

" filetypeはNeoBundleの処理終了後
filetype plugin on

"vimデフォルトのエクスプローラをvimfilerで置き換える
let g:vimfiler_as_default_explorer = 1
"セーフモードを無効にした状態で起動する
let g:vimfiler_safe_mode_by_default = 0

syntax on

" カーソル位置置換の設定
" 予めヤンクしておき、cyかciyでカーソル位置の単語を置換
" n.で繰り返せる
nnoremap <silent> ciy ciw<C-r>0<ESC>:let@/=@1<CR>:noh<CR>
nnoremap <silent> cy   ce<C-r>0<ESC>:let@/=@1<CR>:noh<CR>
vnoremap <silent> cy   c<C-r>0<ESC>:let@/=@1<CR>:noh<CR>



NeoBundle 'Konfekt/FastFold'
let g:tex_fold_enabled=1
let g:vimsyn_folding='af'
let g:xml_syntax_folding = 1
let g:php_folding = 1
let g:perl_fold = 1
let g:python_fold = 1


